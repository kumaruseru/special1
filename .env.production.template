# ==============================================
# SPECIAL1 - PRODUCTION ENVIRONMENT TEMPLATE
# ==============================================
# Copy this file to .env and fill in your values

# ==============================================
# SERVER CONFIGURATION
# ==============================================
PORT=3000
NODE_ENV=production
HOST=0.0.0.0

# ==============================================
# DATABASE CONFIGURATION (REQUIRED)
# ==============================================
# MongoDB - Primary database
MONGODB_URI=mongodb://localhost:27017/socialnetwork
# Alternative: mongodb+srv://username:password@cluster.mongodb.net/socialnetwork

# Redis - Caching and sessions (Optional but recommended)
REDIS_URL=redis://localhost:6379
# Alternative: redis://username:password@host:port

# PostgreSQL - Analytics and reporting (Optional)
POSTGRES_URL=postgresql://username:password@localhost:5432/socialnetwork

# Neo4j - Social graph analysis (Optional)
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=password

# ==============================================
# SECURITY CONFIGURATION (CRITICAL - REQUIRED)
# ==============================================
# JWT Secret - MUST be at least 32 characters, CANNOT be 'default_secret'
# Generate with: openssl rand -base64 32
JWT_SECRET=

# CRITICAL: DO NOT use these example values in production:
# JWT_SECRET=my-super-secret-jwt-key-that-is-very-long-and-secure-2024
# JWT_SECRET=CHANGE-THIS-TO-YOUR-OWN-SECURE-RANDOM-STRING

# Encryption Key - MUST be exactly 32 characters  
ENCRYPTION_KEY=

# Session Secret
SESSION_SECRET=

# ==============================================
# EMAIL CONFIGURATION (REQUIRED for notifications)
# ==============================================
# SMTP Settings
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false

# Email Credentials - REQUIRED
EMAIL_USER=your-email@domain.com
EMAIL_PASSWORD=your-secure-app-password

# ==============================================
# CORS & SECURITY
# ==============================================
# Production domain(s) - comma separated for multiple
CORS_ORIGIN=https://yourdomain.com,https://www.yourdomain.com

# Rate limiting
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW_MS=900000

# ==============================================
# LOGGING CONFIGURATION
# ==============================================
LOG_LEVEL=info
LOG_FILE_ENABLED=true
LOG_FILE_PATH=./logs/app.log

# Development only - set to false in production
LOG_TO_CONSOLE=false

# ==============================================
# FILE UPLOAD (if implemented)
# ==============================================
# Maximum file size in bytes (10MB default)
MAX_FILE_SIZE=10485760

# Upload directory
UPLOAD_DIR=./uploads

# ==============================================
# SOCIAL FEATURES (Optional)
# ==============================================
# WebRTC STUN/TURN servers
STUN_SERVER=stun:stun.l.google.com:19302
TURN_SERVER=turn:your-turn-server.com:3478
TURN_USERNAME=your-turn-username
TURN_PASSWORD=your-turn-password

# ==============================================
# MONITORING & HEALTH CHECKS
# ==============================================
HEALTH_CHECK_ENDPOINT=/health
STATUS_ENDPOINT=/status

# ==============================================
# PRODUCTION DEPLOYMENT
# ==============================================
# Process manager
PM2_INSTANCES=max
PM2_MAX_MEMORY=1G

# Clustering
CLUSTER_ENABLED=true
CLUSTER_WORKERS=auto

# ==============================================
# EXAMPLE VALUES (Replace with your actual values)
# ==============================================
# NODE_ENV=production
# PORT=3000
# MONGODB_URI=mongodb+srv://admin:password123@cluster.mongodb.net/cosmicnet
# JWT_SECRET=my-super-secret-jwt-key-that-is-very-long-and-secure-2024
# EMAIL_USER=noreply@mycompany.com
# EMAIL_PASSWORD=my-secure-app-password
# CORS_ORIGIN=https://myapp.com,https://www.myapp.com

# ==============================================
# SECURITY NOTES
# ==============================================
# 1. Never commit this file with real values to version control
# 2. Use strong, unique passwords for all services
# 3. Rotate secrets regularly
# 4. Enable 2FA for all external services
# 5. Use environment-specific configurations
# 6. Monitor for unauthorized access attempts
